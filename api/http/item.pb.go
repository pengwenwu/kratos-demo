// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: item.proto

// package 命名使用 {appid}.{version} 的方式, version 形如 v1, v2 ..

package http

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	io "io"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ItemGetListReq struct {
	// 店铺id
	StoreId int64 `protobuf:"varint,1,opt,name=store_id,json=storeId,proto3" json:"store_id,omitempty" form:"store_id" validate:"required"`
	// 页号，0开始
	PageNum int64 `protobuf:"varint,2,opt,name=page_num,json=pageNum,proto3" json:"page_num,omitempty" form:"page_num"`
	// 分页大小
	PageSize             int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty" form:"page_size"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemGetListReq) Reset()         { *m = ItemGetListReq{} }
func (m *ItemGetListReq) String() string { return proto.CompactTextString(m) }
func (*ItemGetListReq) ProtoMessage()    {}
func (*ItemGetListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_6007f868cf6553df, []int{0}
}
func (m *ItemGetListReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemGetListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemGetListReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemGetListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemGetListReq.Merge(m, src)
}
func (m *ItemGetListReq) XXX_Size() int {
	return m.Size()
}
func (m *ItemGetListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemGetListReq.DiscardUnknown(m)
}

var xxx_messageInfo_ItemGetListReq proto.InternalMessageInfo

type ItemGetListResp struct {
	Id                   int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Appkey               string   `protobuf:"bytes,2,opt,name=appkey,proto3" json:"appkey"`
	Channel              int64    `protobuf:"varint,3,opt,name=channel,proto3" json:"channel"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Photo                string   `protobuf:"bytes,5,opt,name=photo,proto3" json:"photo"`
	Detail               string   `protobuf:"bytes,6,opt,name=detail,proto3" json:"detail"`
	LastDated            string   `protobuf:"bytes,7,opt,name=last_dated,json=lastDated,proto3" json:"last_dated"`
	Dated                string   `protobuf:"bytes,8,opt,name=dated,proto3" json:"dated"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemGetListResp) Reset()         { *m = ItemGetListResp{} }
func (m *ItemGetListResp) String() string { return proto.CompactTextString(m) }
func (*ItemGetListResp) ProtoMessage()    {}
func (*ItemGetListResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_6007f868cf6553df, []int{1}
}
func (m *ItemGetListResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ItemGetListResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ItemGetListResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalTo(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ItemGetListResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemGetListResp.Merge(m, src)
}
func (m *ItemGetListResp) XXX_Size() int {
	return m.Size()
}
func (m *ItemGetListResp) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemGetListResp.DiscardUnknown(m)
}

var xxx_messageInfo_ItemGetListResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ItemGetListReq)(nil), "item.v1.ItemGetListReq")
	proto.RegisterType((*ItemGetListResp)(nil), "item.v1.ItemGetListResp")
}

func init() { proto.RegisterFile("item.proto", fileDescriptor_6007f868cf6553df) }

var fileDescriptor_6007f868cf6553df = []byte{
	// 465 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x52, 0xc1, 0x6e, 0xd4, 0x30,
	0x10, 0x6d, 0xd2, 0xed, 0x66, 0x77, 0x40, 0x2d, 0x32, 0x08, 0xa2, 0x55, 0xb5, 0xae, 0x8c, 0x10,
	0x5c, 0x9a, 0xa8, 0x70, 0xeb, 0x71, 0x85, 0x84, 0x2a, 0x21, 0x84, 0xcc, 0x05, 0x71, 0x59, 0x79,
	0x1b, 0x37, 0x6b, 0x91, 0xc4, 0x6e, 0xe2, 0x54, 0x82, 0x23, 0xbf, 0xc0, 0x85, 0x3f, 0xe0, 0x13,
	0xf8, 0x85, 0x1e, 0x91, 0xb8, 0x5b, 0xb0, 0x70, 0xca, 0x71, 0xbf, 0x00, 0xd9, 0xce, 0xd2, 0x56,
	0xe2, 0x92, 0x79, 0xf3, 0xde, 0xcc, 0xf8, 0x69, 0x32, 0x00, 0x42, 0xf3, 0x32, 0x51, 0xb5, 0xd4,
	0x12, 0x45, 0x0e, 0x5f, 0x1c, 0x4d, 0x0e, 0x73, 0xa1, 0x97, 0xed, 0x22, 0x39, 0x95, 0x65, 0x9a,
	0xcb, 0x5c, 0xa6, 0x4e, 0x5f, 0xb4, 0x67, 0x2e, 0x73, 0x89, 0x43, 0xbe, 0x6f, 0xb2, 0x9f, 0x4b,
	0x99, 0x17, 0x3c, 0x65, 0x4a, 0xa4, 0xac, 0xaa, 0xa4, 0x66, 0x5a, 0xc8, 0xaa, 0xf1, 0x2a, 0xf9,
	0x16, 0xc0, 0xee, 0x89, 0xe6, 0xe5, 0x0b, 0xae, 0x5f, 0x8a, 0x46, 0x53, 0x7e, 0x8e, 0x66, 0x30,
	0x6a, 0xb4, 0xac, 0xf9, 0x5c, 0x64, 0x71, 0x70, 0x10, 0x3c, 0xd9, 0x9e, 0x3d, 0x5e, 0x1b, 0xfc,
	0xf0, 0x4c, 0xd6, 0xe5, 0x31, 0xd9, 0x28, 0xe4, 0xe0, 0x82, 0x15, 0x22, 0x63, 0x9a, 0x1f, 0x93,
	0x9a, 0x9f, 0xb7, 0xa2, 0xe6, 0x19, 0xa1, 0x91, 0x93, 0x4f, 0x32, 0x94, 0xc0, 0x48, 0xb1, 0x9c,
	0xcf, 0xab, 0xb6, 0x8c, 0x43, 0x37, 0xe3, 0xee, 0xda, 0xe0, 0x3d, 0x3f, 0x63, 0xa3, 0x10, 0x1a,
	0x59, 0xf8, 0xaa, 0x2d, 0xd1, 0x11, 0x8c, 0x1d, 0xdb, 0x88, 0x8f, 0x3c, 0xde, 0x76, 0x0d, 0xf7,
	0xd6, 0x06, 0xdf, 0xb9, 0xd6, 0x60, 0x25, 0x42, 0xdd, 0xd8, 0x37, 0x16, 0x7e, 0x0d, 0x61, 0xef,
	0x86, 0xf3, 0x46, 0xa1, 0xfb, 0x10, 0xfe, 0x33, 0x3d, 0xec, 0x0c, 0x0e, 0x45, 0x46, 0x43, 0x91,
	0x21, 0x02, 0x43, 0xa6, 0xd4, 0x7b, 0xfe, 0xc1, 0x99, 0x19, 0xcf, 0xa0, 0x33, 0xb8, 0x67, 0x68,
	0x1f, 0xd1, 0x23, 0x88, 0x4e, 0x97, 0xac, 0xaa, 0x78, 0xd1, 0x1b, 0xb8, 0xd5, 0x19, 0xbc, 0xa1,
	0xe8, 0x06, 0xa0, 0x7d, 0x18, 0x54, 0xac, 0xe4, 0xf1, 0xc0, 0x0d, 0x1a, 0x75, 0x06, 0xbb, 0x9c,
	0xba, 0x2f, 0xc2, 0xb0, 0xa3, 0x96, 0x52, 0xcb, 0x78, 0xc7, 0xc9, 0xe3, 0xce, 0x60, 0x4f, 0x50,
	0x1f, 0xac, 0x93, 0x8c, 0x6b, 0x26, 0x8a, 0x78, 0x78, 0xe5, 0xc4, 0x33, 0xb4, 0x8f, 0xe8, 0x10,
	0xa0, 0x60, 0x8d, 0x9e, 0xdb, 0xed, 0x66, 0x71, 0xe4, 0xea, 0x76, 0x3b, 0x83, 0xaf, 0xb1, 0x74,
	0x6c, 0xf1, 0x73, 0x0b, 0xed, 0x9b, 0xbe, 0x72, 0x74, 0xf5, 0xa6, 0x2f, 0xf2, 0xe1, 0xe9, 0x5b,
	0x18, 0xd8, 0x45, 0xa1, 0xd7, 0x10, 0xf5, 0xcb, 0x42, 0x0f, 0x92, 0xfe, 0x9a, 0x92, 0x9b, 0x3f,
	0x7f, 0x12, 0xff, 0x5f, 0x68, 0x14, 0x41, 0x9f, 0x7e, 0xfc, 0xf9, 0x1c, 0xde, 0x46, 0x90, 0xda,
	0x8a, 0xb4, 0x10, 0x8d, 0x9e, 0x4d, 0x2e, 0x7f, 0x4d, 0xb7, 0x2e, 0x57, 0xd3, 0xe0, 0xfb, 0x6a,
	0x1a, 0xfc, 0x5c, 0x4d, 0x83, 0x2f, 0xbf, 0xa7, 0x5b, 0xef, 0x06, 0x4b, 0xad, 0xd5, 0x62, 0xe8,
	0x0e, 0xec, 0xd9, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0xae, 0x65, 0x98, 0x59, 0xc4, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ItemClient is the client API for Item service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ItemClient interface {
	// `internal:"true"` 获取商品列表
	GetList(ctx context.Context, in *ItemGetListReq, opts ...grpc.CallOption) (*ItemGetListResp, error)
}

type itemClient struct {
	cc *grpc.ClientConn
}

func NewItemClient(cc *grpc.ClientConn) ItemClient {
	return &itemClient{cc}
}

func (c *itemClient) GetList(ctx context.Context, in *ItemGetListReq, opts ...grpc.CallOption) (*ItemGetListResp, error) {
	out := new(ItemGetListResp)
	err := c.cc.Invoke(ctx, "/item.v1.Item/GetList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ItemServer is the server API for Item service.
type ItemServer interface {
	// `internal:"true"` 获取商品列表
	GetList(context.Context, *ItemGetListReq) (*ItemGetListResp, error)
}

func RegisterItemServer(s *grpc.Server, srv ItemServer) {
	s.RegisterService(&_Item_serviceDesc, srv)
}

func _Item_GetList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ItemGetListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ItemServer).GetList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/item.v1.Item/GetList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ItemServer).GetList(ctx, req.(*ItemGetListReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Item_serviceDesc = grpc.ServiceDesc{
	ServiceName: "item.v1.Item",
	HandlerType: (*ItemServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetList",
			Handler:    _Item_GetList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "item.proto",
}

func (m *ItemGetListReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemGetListReq) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.StoreId != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintItem(dAtA, i, uint64(m.StoreId))
	}
	if m.PageNum != 0 {
		dAtA[i] = 0x10
		i++
		i = encodeVarintItem(dAtA, i, uint64(m.PageNum))
	}
	if m.PageSize != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintItem(dAtA, i, uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func (m *ItemGetListResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalTo(dAtA)
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ItemGetListResp) MarshalTo(dAtA []byte) (int, error) {
	var i int
	_ = i
	var l int
	_ = l
	if m.Id != 0 {
		dAtA[i] = 0x8
		i++
		i = encodeVarintItem(dAtA, i, uint64(m.Id))
	}
	if len(m.Appkey) > 0 {
		dAtA[i] = 0x12
		i++
		i = encodeVarintItem(dAtA, i, uint64(len(m.Appkey)))
		i += copy(dAtA[i:], m.Appkey)
	}
	if m.Channel != 0 {
		dAtA[i] = 0x18
		i++
		i = encodeVarintItem(dAtA, i, uint64(m.Channel))
	}
	if len(m.Name) > 0 {
		dAtA[i] = 0x22
		i++
		i = encodeVarintItem(dAtA, i, uint64(len(m.Name)))
		i += copy(dAtA[i:], m.Name)
	}
	if len(m.Photo) > 0 {
		dAtA[i] = 0x2a
		i++
		i = encodeVarintItem(dAtA, i, uint64(len(m.Photo)))
		i += copy(dAtA[i:], m.Photo)
	}
	if len(m.Detail) > 0 {
		dAtA[i] = 0x32
		i++
		i = encodeVarintItem(dAtA, i, uint64(len(m.Detail)))
		i += copy(dAtA[i:], m.Detail)
	}
	if len(m.LastDated) > 0 {
		dAtA[i] = 0x3a
		i++
		i = encodeVarintItem(dAtA, i, uint64(len(m.LastDated)))
		i += copy(dAtA[i:], m.LastDated)
	}
	if len(m.Dated) > 0 {
		dAtA[i] = 0x42
		i++
		i = encodeVarintItem(dAtA, i, uint64(len(m.Dated)))
		i += copy(dAtA[i:], m.Dated)
	}
	if m.XXX_unrecognized != nil {
		i += copy(dAtA[i:], m.XXX_unrecognized)
	}
	return i, nil
}

func encodeVarintItem(dAtA []byte, offset int, v uint64) int {
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return offset + 1
}
func (m *ItemGetListReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.StoreId != 0 {
		n += 1 + sovItem(uint64(m.StoreId))
	}
	if m.PageNum != 0 {
		n += 1 + sovItem(uint64(m.PageNum))
	}
	if m.PageSize != 0 {
		n += 1 + sovItem(uint64(m.PageSize))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ItemGetListResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovItem(uint64(m.Id))
	}
	l = len(m.Appkey)
	if l > 0 {
		n += 1 + l + sovItem(uint64(l))
	}
	if m.Channel != 0 {
		n += 1 + sovItem(uint64(m.Channel))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovItem(uint64(l))
	}
	l = len(m.Photo)
	if l > 0 {
		n += 1 + l + sovItem(uint64(l))
	}
	l = len(m.Detail)
	if l > 0 {
		n += 1 + l + sovItem(uint64(l))
	}
	l = len(m.LastDated)
	if l > 0 {
		n += 1 + l + sovItem(uint64(l))
	}
	l = len(m.Dated)
	if l > 0 {
		n += 1 + l + sovItem(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovItem(x uint64) (n int) {
	for {
		n++
		x >>= 7
		if x == 0 {
			break
		}
	}
	return n
}
func sozItem(x uint64) (n int) {
	return sovItem(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ItemGetListReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowItem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemGetListReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemGetListReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StoreId", wireType)
			}
			m.StoreId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StoreId |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageNum", wireType)
			}
			m.PageNum = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageNum |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field PageSize", wireType)
			}
			m.PageSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.PageSize |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipItem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthItem
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthItem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ItemGetListResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowItem
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ItemGetListResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ItemGetListResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Appkey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthItem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthItem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Appkey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Channel", wireType)
			}
			m.Channel = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Channel |= int64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthItem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthItem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Photo", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthItem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthItem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Photo = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Detail", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthItem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthItem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Detail = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastDated", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthItem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthItem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LastDated = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Dated", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowItem
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthItem
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthItem
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Dated = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipItem(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if skippy < 0 {
				return ErrInvalidLengthItem
			}
			if (iNdEx + skippy) < 0 {
				return ErrInvalidLengthItem
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipItem(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowItem
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowItem
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
			return iNdEx, nil
		case 1:
			iNdEx += 8
			return iNdEx, nil
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowItem
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthItem
			}
			iNdEx += length
			if iNdEx < 0 {
				return 0, ErrInvalidLengthItem
			}
			return iNdEx, nil
		case 3:
			for {
				var innerWire uint64
				var start int = iNdEx
				for shift := uint(0); ; shift += 7 {
					if shift >= 64 {
						return 0, ErrIntOverflowItem
					}
					if iNdEx >= l {
						return 0, io.ErrUnexpectedEOF
					}
					b := dAtA[iNdEx]
					iNdEx++
					innerWire |= (uint64(b) & 0x7F) << shift
					if b < 0x80 {
						break
					}
				}
				innerWireType := int(innerWire & 0x7)
				if innerWireType == 4 {
					break
				}
				next, err := skipItem(dAtA[start:])
				if err != nil {
					return 0, err
				}
				iNdEx = start + next
				if iNdEx < 0 {
					return 0, ErrInvalidLengthItem
				}
			}
			return iNdEx, nil
		case 4:
			return iNdEx, nil
		case 5:
			iNdEx += 4
			return iNdEx, nil
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
	}
	panic("unreachable")
}

var (
	ErrInvalidLengthItem = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowItem   = fmt.Errorf("proto: integer overflow")
)
